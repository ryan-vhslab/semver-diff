name: Get semver diff
on:
  release:
    types: [published]
  # release:
  #   types:
  #     - created
  # push:
  #   tags:
  #     - v*
jobs:
  test:
    runs-on: ubuntu-latest
    name: semver-diff
    steps:
      - uses: actions/checkout@v3
      - name: Run semver-diff
        id: semver-diff
        uses: tj-actions/semver-diff@v3
      - name: Check release type
        id: check-release-type
        run: |
          # Release type: major || minor || patch || prerelease || build 
          echo "release_type: ${{ steps.semver-diff.outputs.release_type }}"
          # Version outputs format: v0.0.1
          echo "new_version: ${{ steps.semver-diff.outputs.new_version }}"
          echo "old_version: ${{ steps.semver-diff.outputs.old_version }}"

          case ${{ steps.semver-diff.outputs.release_type }} in
            major | minor)
              echo "release_type=${{ steps.semver-diff.outputs.release_type }}"
              echo "updated_components='ALL'" >> $GITHUB_OUTPUT
              exit 0 ;;
            patch | prerelease | build)
              if [ "${{ steps.semver-diff.outputs.new_version }}" == "${{ steps.semver-diff.outputs.old_version }}" ]; then
                  # no changes detected 
                  echo "release_type=${{ steps.semver-diff.outputs.release_type }}"
                  echo "updated_components=''" >> $GITHUB_OUTPUT
                  exit 0
              else
                echo "compare_versions=true" >> $GITHUB_OUTPUT
              fi ;;
          esac
        continue-on-error: true

      - name: Failed to detect release_type
        if: failure() || steps.check-release-type.outcome != 'success'
        run: |
          # Occurs when version does not match the semver scheme 'X.Y.Z(-PRERELEASE)(+BUILD)'
          echo "update_all=true" >> $GITHUB_OUTPUT
          echo "updated_components=${{ inputs.components }}" >> $GITHUB_OUTPUT
          exit 0

      - name: Compare Versions
        id: compare-versions
        if: steps.check-release-type.outputs.compare_versions == 'true'
        run: | 
          components="service/api/picks-api
          service/api/picks-pricing-api"

          git_diff=`git diff --name-only ${{ steps.semver-diff.outputs.new_version }} ${{ steps.semver-diff.outputs.old_version }}`
          readarray -t component <<< $(echo -e "${{ inputs.components }}")

          readarray -t component <<< $(echo -e "${components}")
          for path in "${component[@]}"; do
            # echo "${path}"
            if [[ -n "$path" ]] && [[ $git_diff =~ "${path}" ]]; then
              echo "updated: $path" 
              component_with_changes+="${path}"$'\n'
            else
              echo "not updated: $path" 
            fi
          done

          echo "------------------------------"
          echo "component_with_changes: ${component_with_changes}"
          echo "git_diff: ${git_diff}"

